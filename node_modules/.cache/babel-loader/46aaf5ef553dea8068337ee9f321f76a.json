{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\myquiz\\\\src\\\\components\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCtNlVhYd7g5WoHEqzyKwGMOg1_F3cAVFM\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCtNlVhYd7g5WoHEqzyKwGMOg1_F3cAVFM\";\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Registracija nije uspjela!\";\n            throw new Error(errorMessage);\n          });\n        }\n      }).then(data => {}).catch(err => {\n        alert(err.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Prijava\" : \"Registracija\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Va\\u0161 Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Va\\u0161a lozinka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n            children: isLogin ? \"Prijava\" : \"Napravite račun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"U\\u010Ditavanje...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"toggle\",\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Napravite novi račun\" : \"Prijava putem postojećeg računa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"BrByLDXyILkPLz1D9qcBOgV/SUM=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","AuthContext","AuthForm","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","catch","err","alert","message"],"sources":["C:/Users/Korisnik/Desktop/myquiz/src/components/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from \"react\";\r\nimport AuthContext from \"../store/auth-context\";\r\n\r\nconst AuthForm = () => {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    setIsLoading(true);\r\n    let url;\r\n\r\n    if (isLogin) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCtNlVhYd7g5WoHEqzyKwGMOg1_F3cAVFM\";\r\n    } else {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCtNlVhYd7g5WoHEqzyKwGMOg1_F3cAVFM\";\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          if (res.ok) {\r\n            return res.json();\r\n          } else {\r\n            return res.json().then((data) => {\r\n              let errorMessage = \"Registracija nije uspjela!\";\r\n\r\n              throw new Error(errorMessage);\r\n            });\r\n          }\r\n        })\r\n        .then((data) => {})\r\n        .catch((err) => {\r\n          alert(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginsignup\">\r\n      <section className=\"auth\">\r\n        <h1>{isLogin ? \"Prijava\" : \"Registracija\"}</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"control\">\r\n            <label htmlFor=\"email\">Vaš Email</label>\r\n            <input type=\"email\" id=\"email\" required ref={emailInputRef} />\r\n          </div>\r\n          <div className=\"control\">\r\n            <label htmlFor=\"password\">Vaša lozinka</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n          <div className=\"actions\">\r\n            {!isLoading && (\r\n              <button>{isLogin ? \"Prijava\" : \"Napravite račun\"}</button>\r\n            )}\r\n            {isLoading && <p>Učitavanje...</p>}\r\n            <button\r\n              type=\"button\"\r\n              className=\"toggle\"\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin\r\n                ? \"Napravite novi račun\"\r\n                : \"Prijava putem postojećeg računa\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}