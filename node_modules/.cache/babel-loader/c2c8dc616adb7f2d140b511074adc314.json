{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\myquiz\\\\src\\\\components\\\\quiz\\\\Play.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport M from \"materialize-css\";\nimport questions from \"../../../src/questions.json\";\nimport isEmpty from \"../../utils/is-empty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Play extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.displayQuestions = function () {\n      let questions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.questions;\n      let currentQuestion = arguments.length > 1 ? arguments[1] : undefined;\n      let nextQuestion = arguments.length > 2 ? arguments[2] : undefined;\n      let previousQuestion = arguments.length > 3 ? arguments[3] : undefined;\n      let {\n        currentQuestionIndex\n      } = _this.state;\n\n      if (!isEmpty(_this.state.questions)) {\n        questions = _this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n\n        _this.setState({\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberofQuestions: questions.length,\n          answer,\n          previousRandomNumbers: []\n        }, () => {\n          _this.showOptions();\n        });\n      }\n    };\n\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        this.correctAnswer();\n      } else {\n        this.wrongAnswer();\n      }\n    };\n\n    this.correctAnswer = () => {\n      M.toast({\n        html: \"Correct Answer\",\n        classes: \"toast-valid\",\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberofAnsweredQuestions: prevState.numberofAnsweredQuestions + 1\n      }), () => {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    };\n\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: \"Wrong Answer\",\n        classes: \"toast-invalid\",\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberofAnsweredQuestions: prevState.numberofAnsweredQuestions + 1\n      }), () => {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    };\n\n    this.handleNextButtonClick = () => {\n      if (this.state.nextQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handlePreviousButtonClick = () => {\n      if (this.state.previousQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handleQuitButtonClick = () => {\n      if (window.confirm(\"Jeste li sigurni?\")) {\n        this.props.history.push(\"/home\");\n      }\n    };\n\n    this.handleButtonClick = e => {\n      switch (e.target.id) {\n        case \"next-button\":\n          this.handleNextButtonClick();\n          break;\n\n        case \"previous-button\":\n          this.handlePreviousButtonClick();\n          break;\n\n        case \"quit-button\":\n          this.handleQuitButtonClick();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.showOptions = () => {\n      const options = Array.from(document.querySelectorAll(\".option\"));\n      options.forEach(option => {\n        option.style.visibility = \"visible\";\n      });\n    };\n\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        const options = Array.from(document.querySelectorAll(\".option\"));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = \"hidden\";\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      }\n    };\n\n    this.startTimer = () => {\n      const countDownTime = Date.now() + 180000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countDownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            alert(\"Isteklo je vrijeme!\");\n            this.props.history.push(\"/home\");\n          });\n        } else {\n          this.setState({\n            time: {\n              minutes,\n              seconds\n            }\n          });\n        }\n      }, 1000);\n    };\n\n    this.handleDisableButton = () => {\n      if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n        this.setState({\n          previousButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          previousButtonDisabled: false\n        });\n      }\n    };\n\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: \"\",\n      numberofQuestions: 0,\n      numberofAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      usedFiftyFifty: false,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n  }\n\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    this.startTimer();\n  }\n\n  render() {\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      hints,\n      numberofQuestions,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playquiz\",\n        children: [/*#__PURE__*/_jsxDEV(Helmet, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Kviz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"QUIZ MODE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lifeline-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: this.handleHints,\n                className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: hints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"left\",\n                children: [currentQuestionIndex + 1, \" of \", numberofQuestions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"right\",\n                children: [time.minutes, \":\", time.seconds]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-clock-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionC\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"previous-button\",\n              onClick: this.handleButtonClick,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"next-button\",\n              onClick: this.handleButtonClick,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"quit-button\",\n              onClick: this.handleButtonClick,\n              children: \"Quit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Play;","map":{"version":3,"names":["React","Component","Fragment","Helmet","M","questions","isEmpty","Play","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberofQuestions","length","previousRandomNumbers","showOptions","handleOptionClick","e","target","innerHTML","toLowerCase","correctAnswer","wrongAnswer","toast","html","classes","displayLength","prevState","score","correctAnswers","numberofAnsweredQuestions","navigator","vibrate","wrongAnswers","handleNextButtonClick","undefined","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","id","options","Array","from","document","querySelectorAll","forEach","option","style","visibility","handleHints","hints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","alert","handleDisableButton","previousButtonDisabled","nextButtonDisabled","usedFiftyFifty","componentDidMount","render","question","optionA","optionB","optionC","optionD"],"sources":["C:/Users/Korisnik/Desktop/myquiz/src/components/quiz/Play.js"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport M from \"materialize-css\";\r\nimport questions from \"../../../src/questions.json\";\r\nimport isEmpty from \"../../utils/is-empty\";\r\nclass Play extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions,\r\n      currentQuestion: {},\r\n      nextQuestion: {},\r\n      previousQuestion: {},\r\n      answer: \"\",\r\n      numberofQuestions: 0,\r\n      numberofAnsweredQuestions: 0,\r\n      currentQuestionIndex: 0,\r\n      score: 0,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0,\r\n      hints: 5,\r\n      nextButtonDisabled: false,\r\n      previousButtonDisabled: true,\r\n\r\n      usedFiftyFifty: false,\r\n      previousRandomNumbers: [],\r\n      time: {},\r\n    };\r\n    this.interval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { questions, currentQuestion, nextQuestion, previousQuestion } =\r\n      this.state;\r\n    this.displayQuestions(\r\n      questions,\r\n      currentQuestion,\r\n      nextQuestion,\r\n      previousQuestion\r\n    );\r\n    this.startTimer();\r\n  }\r\n\r\n  displayQuestions = (\r\n    questions = this.state.questions,\r\n    currentQuestion,\r\n    nextQuestion,\r\n    previousQuestion\r\n  ) => {\r\n    let { currentQuestionIndex } = this.state;\r\n    if (!isEmpty(this.state.questions)) {\r\n      questions = this.state.questions;\r\n      currentQuestion = questions[currentQuestionIndex];\r\n      nextQuestion = questions[currentQuestionIndex + 1];\r\n      previousQuestion = questions[currentQuestionIndex - 1];\r\n      const answer = currentQuestion.answer;\r\n      this.setState(\r\n        {\r\n          currentQuestion,\r\n          nextQuestion,\r\n          previousQuestion,\r\n          numberofQuestions: questions.length,\r\n          answer,\r\n          previousRandomNumbers: [],\r\n        },\r\n        () => {\r\n          this.showOptions();\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOptionClick = (e) => {\r\n    if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n      this.correctAnswer();\r\n    } else {\r\n      this.wrongAnswer();\r\n    }\r\n  };\r\n\r\n  correctAnswer = () => {\r\n    M.toast({\r\n      html: \"Correct Answer\",\r\n      classes: \"toast-valid\",\r\n      displayLength: 1500,\r\n    });\r\n    this.setState(\r\n      (prevState) => ({\r\n        score: prevState.score + 1,\r\n        correctAnswers: prevState.correctAnswers + 1,\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        numberofAnsweredQuestions: prevState.numberofAnsweredQuestions + 1,\r\n      }),\r\n      () => {\r\n        this.displayQuestions(\r\n          this.state.questions,\r\n          this.state.currentQuestion,\r\n          this.state.nextQuestion,\r\n          this.state.previousQuestion\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  wrongAnswer = () => {\r\n    navigator.vibrate(1000);\r\n    M.toast({\r\n      html: \"Wrong Answer\",\r\n      classes: \"toast-invalid\",\r\n      displayLength: 1500,\r\n    });\r\n    this.setState(\r\n      (prevState) => ({\r\n        wrongAnswers: prevState.wrongAnswers + 1,\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        numberofAnsweredQuestions: prevState.numberofAnsweredQuestions + 1,\r\n      }),\r\n      () => {\r\n        this.displayQuestions(\r\n          this.state.questions,\r\n          this.state.currentQuestion,\r\n          this.state.nextQuestion,\r\n          this.state.previousQuestion\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  handleNextButtonClick = () => {\r\n    if (this.state.nextQuestion !== undefined) {\r\n      this.setState(\r\n        (prevState) => ({\r\n          currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        }),\r\n        () => {\r\n          this.displayQuestions(\r\n            this.state.state,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previousQuestion\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handlePreviousButtonClick = () => {\r\n    if (this.state.previousQuestion !== undefined) {\r\n      this.setState(\r\n        (prevState) => ({\r\n          currentQuestionIndex: prevState.currentQuestionIndex - 1,\r\n        }),\r\n        () => {\r\n          this.displayQuestions(\r\n            this.state.state,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previousQuestion\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleQuitButtonClick = () => {\r\n    if (window.confirm(\"Jeste li sigurni?\")) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  handleButtonClick = (e) => {\r\n    switch (e.target.id) {\r\n      case \"next-button\":\r\n        this.handleNextButtonClick();\r\n        break;\r\n      case \"previous-button\":\r\n        this.handlePreviousButtonClick();\r\n        break;\r\n      case \"quit-button\":\r\n        this.handleQuitButtonClick();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  showOptions = () => {\r\n    const options = Array.from(document.querySelectorAll(\".option\"));\r\n\r\n    options.forEach((option) => {\r\n      option.style.visibility = \"visible\";\r\n    });\r\n  };\r\n\r\n  handleHints = () => {\r\n    if (this.state.hints > 0) {\r\n      const options = Array.from(document.querySelectorAll(\".option\"));\r\n      let indexOfAnswer;\r\n\r\n      options.forEach((option, index) => {\r\n        if (\r\n          option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()\r\n        ) {\r\n          indexOfAnswer = index;\r\n        }\r\n      });\r\n\r\n      while (true) {\r\n        const randomNumber = Math.round(Math.random() * 3);\r\n        if (\r\n          randomNumber !== indexOfAnswer &&\r\n          !this.state.previousRandomNumbers.includes(randomNumber)\r\n        ) {\r\n          options.forEach((option, index) => {\r\n            if (index === randomNumber) {\r\n              option.style.visibility = \"hidden\";\r\n              this.setState((prevState) => ({\r\n                hints: prevState.hints - 1,\r\n                previousRandomNumbers:\r\n                  prevState.previousRandomNumbers.concat(randomNumber),\r\n              }));\r\n            }\r\n          });\r\n          break;\r\n        }\r\n        if (this.state.previousRandomNumbers.length >= 3) break;\r\n      }\r\n    }\r\n  };\r\n\r\n  startTimer = () => {\r\n    const countDownTime = Date.now() + 180000;\r\n    this.interval = setInterval(() => {\r\n      const now = new Date();\r\n      const distance = countDownTime - now;\r\n\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        clearInterval(this.interval);\r\n        this.setState(\r\n          {\r\n            time: {\r\n              minutes: 0,\r\n              seconds: 0,\r\n            },\r\n          },\r\n          () => {\r\n            alert(\"Isteklo je vrijeme!\");\r\n            this.props.history.push(\"/home\");\r\n          }\r\n        );\r\n      } else {\r\n        this.setState({\r\n          time: {\r\n            minutes,\r\n            seconds,\r\n          },\r\n        });\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  handleDisableButton = () => {\r\n    if (\r\n      this.state.previousQuestion === undefined ||\r\n      this.state.currentQuestionIndex === 0\r\n    ) {\r\n      this.setState({\r\n        previousButtonDisabled: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        previousButtonDisabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentQuestion,\r\n      currentQuestionIndex,\r\n      hints,\r\n      numberofQuestions,\r\n      time,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div id=\"playquiz\">\r\n          <Helmet>\r\n            <title>Kviz</title>\r\n          </Helmet>\r\n          <div className=\"questions\">\r\n            <h2>QUIZ MODE</h2>\r\n            <div className=\"lifeline-container\">\r\n              <p>\r\n                <span\r\n                  onClick={this.handleHints}\r\n                  className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"\r\n                >\r\n                  <span>{hints}</span>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p>\r\n                <span className=\"left\">\r\n                  {currentQuestionIndex + 1} of {numberofQuestions}\r\n                </span>\r\n                <span className=\"right\">\r\n                  {time.minutes}:{time.seconds}\r\n                </span>\r\n                <span className=\"mdi mdi-clock-outline mdi-24px\"></span>\r\n              </p>\r\n            </div>\r\n            <h5>{currentQuestion.question}</h5>\r\n            <div className=\"options-container\">\r\n              <p onClick={this.handleOptionClick} className=\"option\">\r\n                {currentQuestion.optionA}\r\n              </p>\r\n              <p onClick={this.handleOptionClick} className=\"option\">\r\n                {currentQuestion.optionB}\r\n              </p>\r\n            </div>\r\n            <div className=\"options-container\">\r\n              <p onClick={this.handleOptionClick} className=\"option\">\r\n                {currentQuestion.optionC}\r\n              </p>\r\n              <p onClick={this.handleOptionClick} className=\"option\">\r\n                {currentQuestion.optionD}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n              <button id=\"previous-button\" onClick={this.handleButtonClick}>\r\n                Previous\r\n              </button>\r\n              <button id=\"next-button\" onClick={this.handleButtonClick}>\r\n                Next\r\n              </button>\r\n              <button id=\"quit-button\" onClick={this.handleButtonClick}>\r\n                Quit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Play;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}