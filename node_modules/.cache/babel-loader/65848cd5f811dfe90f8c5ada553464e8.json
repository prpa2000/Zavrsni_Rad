{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\myquiz\\\\src\\\\components\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n\n    if (isLogin) {} else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCtNlVhYd7g5WoHEqzyKwGMOg1_F3cAVFM\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {} else {\n          return res.json().then(data => {\n            let errorMessage = \"Minimalo 6 znakova za lozinku!\";\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Prijava\" : \"Registracija\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Va\\u0161 Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Va\\u0161a lozinka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n            children: isLogin ? \"Prijava\" : \"Napravite račun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"U\\u010Ditavanje...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"toggle\",\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Napravite novi račun\" : \"Prijava putem postojećeg računa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"RqwvK/AX/XkSKVStQBnmgxX0L/M=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","alert"],"sources":["C:/Users/Korisnik/Desktop/myquiz/src/components/AuthForm.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    setIsLoading(true);\r\n\r\n    if (isLogin) {\r\n    } else {\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCtNlVhYd7g5WoHEqzyKwGMOg1_F3cAVFM\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        setIsLoading(false);\r\n        if (res.ok) {\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Minimalo 6 znakova za lozinku!\";\r\n\r\n            alert(errorMessage);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginsignup\">\r\n      <section className=\"auth\">\r\n        <h1>{isLogin ? \"Prijava\" : \"Registracija\"}</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"control\">\r\n            <label htmlFor=\"email\">Vaš Email</label>\r\n            <input type=\"email\" id=\"email\" required ref={emailInputRef} />\r\n          </div>\r\n          <div className=\"control\">\r\n            <label htmlFor=\"password\">Vaša lozinka</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n          <div className=\"actions\">\r\n            {!isLoading && (\r\n              <button>{isLogin ? \"Prijava\" : \"Napravite račun\"}</button>\r\n            )}\r\n            {isLoading && <p>Učitavanje...</p>}\r\n            <button\r\n              type=\"button\"\r\n              className=\"toggle\"\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin\r\n                ? \"Napravite novi račun\"\r\n                : \"Prijava putem postojećeg računa\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}